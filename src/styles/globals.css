@tailwind base;
@tailwind components;
@tailwind utilities;

@import '@fontsource/poppins';
@import '@fontsource/nunito';
@import 'semantic-ui-css/semantic.min.css';

:root {
  /* #region  /**=========== Primary Color =========== */
  /* !STARTERCONF Customize these variable, copy and paste from /styles/colors.css for list of colors */
  --tw-color-primary-50: 240 249 255;
  --tw-color-primary-100: 224 242 254;
  --tw-color-primary-200: 186 230 253;
  --tw-color-primary-300: 125 211 252;
  --tw-color-primary-400: 56 189 248;
  --tw-color-primary-500: 14 165 233;
  --tw-color-primary-600: 2 132 199;
  --tw-color-primary-700: 3 105 161;
  --tw-color-primary-800: 7 89 133;
  --tw-color-primary-900: 12 74 110;
  --color-primary-50: rgb(var(--tw-color-primary-50)); /* #f0f9ff */
  --color-primary-100: rgb(var(--tw-color-primary-100)); /* #e0f2fe */
  --color-primary-200: rgb(var(--tw-color-primary-200)); /* #bae6fd */
  --color-primary-300: rgb(var(--tw-color-primary-300)); /* #7dd3fc */
  --color-primary-400: rgb(var(--tw-color-primary-400)); /* #38bdf8 */
  --color-primary-500: rgb(var(--tw-color-primary-500)); /* #0ea5e9 */
  --color-primary-600: rgb(var(--tw-color-primary-600)); /* #0284c7 */
  --color-primary-700: rgb(var(--tw-color-primary-700)); /* #0369a1 */
  --color-primary-800: rgb(var(--tw-color-primary-800)); /* #075985 */
  --color-primary-900: rgb(var(--tw-color-primary-900)); /* #0c4a6e */
  /* #endregion  /**======== Primary Color =========== */
}

@layer base {
  body {
    font-family: var(--font-poppins), sans-serif;
  }

  .cursor-newtab {
    cursor: url('/images/new-tab.png') 10 10, pointer;
  }

  /* #region  /**=========== Typography =========== */
  .h0 {
    @apply font-primary text-3xl font-bold md:text-5xl;
  }

  h1,
  .h1 {
    @apply font-primary text-2xl font-bold md:text-4xl;
  }

  h2,
  .h2 {
    @apply font-primary text-xl font-bold md:text-3xl;
  }

  h3,
  .h3 {
    @apply font-primary text-lg font-bold md:text-2xl;
  }

  h4,
  .h4 {
    @apply font-primary text-base font-bold md:text-lg;
  }

  body,
  .p {
    @apply font-primary text-sm md:text-base text-[#545454];
  }

  body,
  select {
    -webkit-appearance: none !important;
    -moz-appearance: none;
    background-image: none;
  }

  body,
  .select::-ms-expand {
    display: none;
  }

  .gradients {
    @apply font-secondary bg-primary-gradient bg-clip-text text-transparent order-first text-4xl md:text-5xl lg:text-[4rem] xl:text-7xl 2xl:text-8xl font-bold tracking-tight;
  }

  .gradient {
    @apply font-secondary bg-primary-gradient bg-clip-text text-transparent;
  }

  .btn-gradient {
    @apply group-hover:bg-primary-gradient group-hover:bg-clip-text group-hover:text-transparent active:bg-primary-gradient active:bg-clip-text active:text-transparent text-black font-semibold text-start text-sm md:text-base lg:text-xl;
  }

  .hero {
    @apply bg-hero-gradient;
  }
  /* #endregion  /**======== Typography =========== */

  .layout {
    /* 1100px */
    max-width: 68.75rem;
    @apply mx-auto w-11/12;
  }

  .bg-dark a.custom-link {
    @apply border-gray-200 hover:border-gray-200/0;
  }

  /* Class to adjust with sticky footer */
  .min-h-main {
    @apply min-h-[calc(100vh-56px)];
  }
}

@layer utilities {
  .animated-underline {
    background-image: linear-gradient(#33333300, #33333300),
      linear-gradient(
        to right,
        var(--color-primary-400),
        var(--color-primary-500)
      );
    background-size: 100% 2px, 0 2px;
    background-position: 100% 100%, 0 100%;
    background-repeat: no-repeat;
  }
  @media (prefers-reduced-motion: no-preference) {
    .animated-underline {
      transition: 0.3s ease;
      transition-property: background-size, color, background-color,
        border-color;
    }
  }
  .animated-underline:hover,
  .animated-underline:focus-visible {
    background-size: 0 2px, 100% 2px;
  }
}

@property --num-productivity {
  syntax: '<integer>';
  initial-value: 0;
  inherits: false;
}

@property --num-roi {
  syntax: '<integer>';
  initial-value: 0;
  inherits: false;
}

@property --num-hemat {
  syntax: '<integer>';
  initial-value: 0;
  inherits: false;
}

@keyframes counter {
  from {
    --num-productivity: 0;
    --num-roi: 0;
    --num-hemat: 0;
  }
  to {
    --num-productivity: 70;
    --num-roi: 50;
    --num-hemat: 20;
  }
}
